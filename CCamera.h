/*-----------------------------------------------------------------------------
	カメラクラス
	author	OkadaMoeto
	since	20140508
-----------------------------------------------------------------------------*/

// ２重インクルード防止
#pragma once

/*-----------------------------------------------------------------------------
	インクルードファイル
-----------------------------------------------------------------------------*/
#include "Main.h"

/*-----------------------------------------------------------------------------
	カメラクラス
-----------------------------------------------------------------------------*/
class CCamera
{
	public:
		CCamera();
		virtual ~CCamera();

		HRESULT Init(void);
		void Uninit(void);
		void Update(void);
		
		/*-----------------------------------------------------------------------------
			カメラの描画設定
		-----------------------------------------------------------------------------*/
		void SetCamera(void);

		/*-----------------------------------------------------------------------------
			カメラ位置を初期値に戻す
		-----------------------------------------------------------------------------*/
		void ResetCamera(void);

		/*-----------------------------------------------------------------------------
			視点の設定
			param	pos		視点座標の設定値
		-----------------------------------------------------------------------------*/
		void SetPosEye(D3DXVECTOR3 pos){ m_posEye = pos; }
		/*-----------------------------------------------------------------------------
			視点の取得
			return	D3DXVECTOR3		視点座標の値
		-----------------------------------------------------------------------------*/
		D3DXVECTOR3 GetPosEye(void){ return m_posEye; }

		/*-----------------------------------------------------------------------------
			注視点座標の設定
			param	pos		注視点座標の設定値
		-----------------------------------------------------------------------------*/
		void SetPosLook(D3DXVECTOR3 pos){ m_posLook = pos; }
		/*-----------------------------------------------------------------------------
			注視点座標の取得
			return	D3DXVECTOR3		注視点座標の値
		-----------------------------------------------------------------------------*/
		D3DXVECTOR3 GetPosLook(void){ return m_posLook; }

		/*-----------------------------------------------------------------------------
			カメラの上方向ベクトルの設定
			param	pos		カメラの上方向ベクトルの設定値
		-----------------------------------------------------------------------------*/
		void SetVecup(D3DXVECTOR3 pos){ m_vecup = pos; }
		/*-----------------------------------------------------------------------------
			カメラの上方向ベクトルの取得
			return	D3DXVECTOR3		 カメラの上方向ベクトルの値
		-----------------------------------------------------------------------------*/
		D3DXVECTOR3 GetVecup(void){ return m_vecup; }

		/*-----------------------------------------------------------------------------
			カメラの向きの設定
			param	rot		カメラの向きの設定値
		-----------------------------------------------------------------------------*/
		void SetRot(D3DXVECTOR3 rot){ m_rot = rot; }
		/*-----------------------------------------------------------------------------
			カメラの向きの取得
			return	D3DXVECTOR3		 カメラの向きの値			
		-----------------------------------------------------------------------------*/
		D3DXVECTOR3 GetRot(void){ return m_rot; }

		/*-----------------------------------------------------------------------------
			法線(ビュー行列)の取得
			return	D3DXMATRIX		 法線(ビュー行列)の値			
		-----------------------------------------------------------------------------*/
		D3DXMATRIX GetMtxView(void){ return m_mtxView; }

		/*-----------------------------------------------------------------------------
			プロジェクション行列の取得
			return	D3DXMATRIX		 プロジェクション行列のの値			
		-----------------------------------------------------------------------------*/
		D3DXMATRIX GetProjectionMatrix(void){ return m_mtxProjection; }

	private:
		// チートカメラの操作（スクショなどを撮る際）
		void OperateCameraMouse(void);

		// カメラの視点
		D3DXVECTOR3 m_posEye;
		// カメラの注視点
		D3DXVECTOR3 m_posLook;
		// カメラの上方向ベクトル
		D3DXVECTOR3 m_vecup;
		// カメラの向き
		D3DXVECTOR3 m_rot;

		D3DXVECTOR3 m_posDestLook;
		// カメラの目的座標
		D3DXVECTOR3 m_posDestEye;
		// カメラの目標角度
		D3DXVECTOR3 m_rotDest;

		// ビュー行列
		D3DXMATRIX m_mtxView;
		// プロジェクション行列
		D3DXMATRIX m_mtxProjection;
		// ビューポート
		D3DVIEWPORT9 m_viewport;

		// 視点と注視点の距離(高さなしのXZ平面上)
		float m_fDistanceEyeLookatAxisXZ;
		// 視点と注視点の距離
		float m_fDistanceEyeLookatAxisXYZ;
};
