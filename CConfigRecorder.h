/*-----------------------------------------------------------------------------
	設定の記録クラス
	author	OkadaMoeto
	since	20150720
-----------------------------------------------------------------------------*/

// ２重インクルード防止
#pragma once

/*-----------------------------------------------------------------------------
	Contentクラス
-----------------------------------------------------------------------------*/
class CConfigRecorder
{
	public:
		// コンストラクタ
		CConfigRecorder(){}
		// デストラクタ
		~CConfigRecorder(){}

		/*-----------------------------------------------------------------------------
			設定ID
			ステージ以外の情報を足してもよい
		-----------------------------------------------------------------------------*/
		enum CONFIG_ID
		{
			CI_STAGESELECT = 0,
			CI_PAUSESLECT,
			CI_MAX
		};

		/*-----------------------------------------------------------------------------
			生成
		-----------------------------------------------------------------------------*/
		static CConfigRecorder* Create(void);
		
		/*-----------------------------------------------------------------------------
			初期化
		-----------------------------------------------------------------------------*/
		void Init(void);
		
		/*-----------------------------------------------------------------------------
			設定
			param	config_id	どのステージIDかの値
			param	val			設定値
		-----------------------------------------------------------------------------*/		
		static void Set(CONFIG_ID config_id, int val);
		
		/*-----------------------------------------------------------------------------
			取得
			return	int			設定している値（-1ならばIDの値がおかしい）
			param	config_id	どのステージIDかの値
		-----------------------------------------------------------------------------*/			
		static int Get(CONFIG_ID config_id);

	private:
		// 設定値
		static int m_config[CI_MAX];
};
